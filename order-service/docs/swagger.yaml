definitions:
  models.CreateOrderRequest:
    properties:
      amount:
        type: number
      direction:
        $ref: '#/definitions/models.Direction'
      pair:
        $ref: '#/definitions/models.Pair'
      type:
        $ref: '#/definitions/models.OrderType'
      user_id:
        type: string
    required:
    - amount
    - direction
    - pair
    - type
    - user_id
    type: object
  models.Direction:
    enum:
    - buy
    - sell
    type: string
    x-enum-varnames:
    - DirectionBuy
    - DirectionSell
  models.Order:
    properties:
      amount:
        type: number
      created_at:
        type: string
      direction:
        $ref: '#/definitions/models.Direction'
      id:
        type: string
      pair:
        $ref: '#/definitions/models.Pair'
      type:
        $ref: '#/definitions/models.OrderType'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.OrderType:
    enum:
    - market
    - limit
    type: string
    x-enum-varnames:
    - OrderTypeMarket
    - OrderTypeLimit
  models.Pair:
    enum:
    - USD/BTC
    - USD/ADA
    - USD/ETH
    - BTC/USD
    - ETH/USD
    - ADA/USD
    type: string
    x-enum-varnames:
    - PairUSDBTC
    - PairUSDADA
    - PairUSDETH
    - PairBTCUSD
    - PairETHUSD
    - PairADAUSD
info:
  contact: {}
paths:
  /orders:
    get:
      description: List all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      summary: List all orders
    post:
      consumes:
      - application/json
      description: Create a new order
      parameters:
      - description: Order details
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
      summary: Create a new order
  /orders/{id}:
    get:
      description: Get an order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Get an order by ID
  /orders/limit/{id}:
    delete:
      responses: {}
  /orders/user/{user_id}:
    get:
      description: List orders by user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      summary: List orders by user
swagger: "2.0"
